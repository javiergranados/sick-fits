{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/Dropbox/Programming/Sources/advanced-React/sick-fits/frontend/src/components/CreateItem.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useMutation } from '@apollo/react-hooks';\nimport Router from 'next/router';\nimport { useState } from 'react';\nimport { useInput } from '../hooks/useInput';\nimport * as S from './styles/Form';\nimport Error from './Error';\nimport { CREATE_ITEM } from '../graphql/mutations';\n\nconst CreateItem = () => {\n  const [title, setTitle] = useInput('');\n  const [price, setPrice] = useInput(0);\n  const [description, setDescription] = useInput('');\n  const {\n    0: image,\n    1: setImage\n  } = useState('');\n  const {\n    0: largeImage,\n    1: setLargeImage\n  } = useState('');\n  const [createItem, {\n    loading,\n    error\n  }] = useMutation(CREATE_ITEM);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      data\n    } = await createItem({\n      variables: {\n        title,\n        price,\n        description,\n        image,\n        largeImage\n      }\n    });\n    Router.push({\n      pathname: '/item',\n      query: {\n        id: data.createItem.id\n      }\n    });\n  };\n\n  const uploadFile = async ({\n    target\n  }) => {\n    const {\n      files\n    } = target;\n    const data = new FormData();\n    data.append('file', files[0]);\n    data.append('upload_preset', 'sick-fits');\n    const res = await fetch('https://api.cloudinary.com/v1_1/jvgranados/image/upload', {\n      method: 'post',\n      body: data\n    });\n    const file = await res.json();\n    setImage(file.secure_url);\n    setLargeImage(file.eager[0].secure_url);\n  };\n\n  return __jsx(S.Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(Error, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(\"fieldset\", {\n    disabled: loading,\n    \"aria-busy\": loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Image\", __jsx(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    placeholder: \"Upload an image\",\n    onChange: uploadFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    htmlFor: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Title\", __jsx(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"Title\",\n    required: true,\n    value: title,\n    onChange: setTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    htmlFor: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Price\", __jsx(\"input\", {\n    type: \"number\",\n    name: \"price\",\n    placeholder: \"Price\",\n    required: true,\n    value: price,\n    onChange: setPrice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    htmlFor: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Description\", __jsx(\"textarea\", {\n    name: \"description\",\n    placeholder: \"Description\",\n    required: true,\n    value: description,\n    onChange: setDescription,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default CreateItem;","map":{"version":3,"sources":["/Volumes/Data/Dropbox/Programming/Sources/advanced-React/sick-fits/frontend/src/components/CreateItem.js"],"names":["useMutation","Router","useState","useInput","S","Error","CREATE_ITEM","CreateItem","title","setTitle","price","setPrice","description","setDescription","image","setImage","largeImage","setLargeImage","createItem","loading","error","handleSubmit","event","preventDefault","data","variables","push","pathname","query","id","uploadFile","target","files","FormData","append","res","fetch","method","body","file","json","secure_url","eager"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/react-hooks';\nimport Router from 'next/router';\nimport { useState } from 'react';\nimport { useInput } from '../hooks/useInput';\nimport * as S from './styles/Form';\nimport Error from './Error';\nimport { CREATE_ITEM } from '../graphql/mutations';\n\nconst CreateItem = () => {\n  const [title, setTitle] = useInput('');\n  const [price, setPrice] = useInput(0);\n  const [description, setDescription] = useInput('');\n  const [image, setImage] = useState('');\n  const [largeImage, setLargeImage] = useState('');\n\n  const [createItem, { loading, error }] = useMutation(CREATE_ITEM);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const { data } = await createItem({ variables: { title, price, description, image, largeImage } });\n\n    Router.push({\n      pathname: '/item',\n      query: { id: data.createItem.id },\n    });\n  };\n\n  const uploadFile = async ({ target }) => {\n    const { files } = target;\n    const data = new FormData();\n    data.append('file', files[0]);\n    data.append('upload_preset', 'sick-fits');\n\n    const res = await fetch('https://api.cloudinary.com/v1_1/jvgranados/image/upload', {\n      method: 'post',\n      body: data,\n    });\n    const file = await res.json();\n\n    setImage(file.secure_url);\n    setLargeImage(file.eager[0].secure_url);\n  };\n\n  return (\n    <S.Form onSubmit={handleSubmit}>\n      <Error error={error} />\n      <fieldset disabled={loading} aria-busy={loading}>\n        <label htmlFor=\"file\">\n          Image\n          <input type=\"file\" name=\"file\" placeholder=\"Upload an image\" onChange={uploadFile} />\n        </label>\n        <label htmlFor=\"title\">\n          Title\n          <input type=\"text\" name=\"title\" placeholder=\"Title\" required value={title} onChange={setTitle} />\n        </label>\n        <label htmlFor=\"price\">\n          Price\n          <input type=\"number\" name=\"price\" placeholder=\"Price\" required value={price} onChange={setPrice} />\n        </label>\n        <label htmlFor=\"description\">\n          Description\n          <textarea\n            name=\"description\"\n            placeholder=\"Description\"\n            required\n            value={description}\n            onChange={setDescription}\n          />\n        </label>\n        <button type=\"submit\">Submit</button>\n      </fieldset>\n    </S.Form>\n  );\n};\n\nexport default CreateItem;\n"]},"metadata":{},"sourceType":"module"}